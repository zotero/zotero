@each $icon in (error) {
	.icon-css.icon-#{$icon} {
		@include svgicon($icon, "universal", "20");
	}
}

.diff-table-field {
	display: flex;
	padding-inline-start: 28px;
	padding-block: 3px;
	gap: 8px;
	align-items: start;
	
	.checkbox-name-wrapper {
		display: flex;
		align-items: center;
	}
	
	.checkbox {
		margin: 0;
		flex-shrink: 0;
	}

	.name {
		width: 105px;
		flex-shrink: 0;
		font-weight: 590;
		white-space: nowrap;
		overflow-x: hidden;
		text-overflow: ellipsis;
		margin-inline: 5px 8px;
	}

	.value {
		-moz-user-select: text;
		white-space: pre-wrap;

		.removed {
			background-color: rgb(from var(--tag-red) r g b / 50%);
			text-decoration: line-through;
		}

		.added {
			background-color: rgb(from var(--accent-green) r g b / 50%);
		}
	}

	&.disabled {
		.value {
			.removed {
				background-color: var(--fill-quarternary);
			}

			.added {
				background-color: var(--fill-quinary);
			}
		}
	}
}

.diff-table {
	display: flex;
	flex-direction: column;
	background: var(--material-background);
	color: var(--fill-primary);
	border-bottom: var(--material-border-quarternary);
	min-width: 0;
	cursor: default;
	user-select: none;

	.body {
		flex: 1 1 0;
		overflow-y: auto;
		overflow-x: hidden;
		padding: 3px 8px;

		.row {
			display: grid;
			grid-template-columns: 28px 1fr;
			column-gap: 4px;
			padding: 5px 0;
			border-bottom: var(--material-border-quarternary);

			.controls {
				grid-column: 1;
				
				display: flex;
				align-items: center;
				justify-content: end;
				gap: 5px;
				
				&.processing {
					.zotero-spinner-16 {
						display: block;
						width: 16px;
						height: 16px;
					}
				}

				&.succeeded {
					input {
						width: 14px;
						height: 14px;
						margin: 0;
					}

					.twisty {
						width: 8px;
						height: 8px;
						transition: transform 0.125s ease;
						transform-origin: center;
						transform: rotate(-90deg);
						box-sizing: border-box;
						-moz-context-properties: fill, fill-opacity;
						background: url("chrome://zotero/skin/8/universal/chevron-8.svg") content-box no-repeat;

						&.open {
							transform: rotate(0deg) !important;
						}
					}
				}
			}

			.title {
				grid-column: 2;
				
				position: relative;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
			}
			
			.message {
				grid-column: 2;
				font-size: 0.85rem;
				color: var(--fill-secondary);
			}

			.fields {
				grid-column: span 2;
				
				font-size: 0.9em;
				margin-top: 4px;
				margin-bottom: 5px;
			}
		}
	}
}

@media (-moz-platform: macos) {
	.diff-table {
		button {
			-moz-appearance: button;
			/* The horizontal margin used here come from the Aqua Human Interface
			   Guidelines, there should be 12 pixels between two buttons. */
			margin: 5px 6px 3px;
			min-width: 79px;
			color: ButtonText;
			text-shadow: none;

			// Bump font-size up from main window (override -moz-appearance above)
			font: -moz-dialog !important;
			// Re-override the font family
			font-family: Lucida Grande, Lucida Sans Unicode, Lucida Sans, Geneva, -apple-system, sans-serif !important;
			// Reduce the font a titch compared to the window buttons for a clean hierarchy
			font-size: 0.95em !important;
		}

		button:not([disabled]):hover:active {
			color: -moz-mac-buttonactivetext;
		}

		/* When the window isn't focused, the default button background isn't drawn,
		 * so don't change the text color then: */
		button[default]:not([disabled]):not(:-moz-window-inactive) {
			color: -moz-mac-defaultbuttontext;
		}

		/* Likewise, when active (mousedown) but not hovering, the default button
		 * background isn't drawn, override the previous selector for that case: */
		button[default]:not(:hover):active {
			color: ButtonText;
		}

		/* Change this from button-text to button since we don't have a child element
		 * in XUL. Furthermore, switch from margin to padding. */
		button {
			padding: 1px 0 !important;
			padding-inline-start: 3px !important;
			padding-inline-end: 2px !important;
			text-align: center;
		}

		.button-icon {
			margin-inline-start: 1px;
		}

		button[type="default"] {
			font: menu;
		}

		/* .......... disabled state .......... */

		button[disabled] {
			color: GrayText;
		}

	}
}
